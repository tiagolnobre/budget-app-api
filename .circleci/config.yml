version: 2

defaults: &defaults
  machine: true # Use a Linux VM instead of docker environment
  working_directory: ~/repo
      # environment:
        # BASH_ENV: /project/.env

jobs:
  build_dependencies:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: docker-compose up -d
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/repo
          paths:
            - vendor/bundle

  audits:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: bundle-audit
          command: docker-compose run --rm api bundle exec bundle-audit check --update

      - run:
          name: brakeman
          command: docker-compose run --rm api bundle exec brakeman --color -o brakeman_results.html -f plain

  unit_tests:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create DB
          command: bin/rails db:create db:schema:load --trace

      - run:
          name: Run unit tests
          command: |
            docker-compose run --rm api bundle exec rspec --format RspecJunitFormatter \
                          --out test_results/rspec.xml \
                          --format progress
      - store_test_results:
          path: test_results


workflows:
  version: 2
  build_test:
    jobs:
      - build_dependencies
      - audits:
          requires:
            - build_dependencies
      - unit_tests:
          requires:
            - build_dependencies
